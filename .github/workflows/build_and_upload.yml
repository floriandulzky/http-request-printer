name: Build and Upload Go Tool

on:
  release:
    types: [created]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      # Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Build the Go binary for Windows amd64
      - name: Build for Windows amd64
        run: GOOS=windows GOARCH=amd64 go build -o http-request-printer-windows-amd64.exe -ldflags "-X main.Version=${{ github.ref_name }}" ./cmd/hrp/main.go

      # Build the Go binary for Windows arm64
      - name: Build for Windows arm64
        run: GOOS=windows GOARCH=arm64 go build -o http-request-printer-windows-arm64.exe -ldflags "-X main.Version=${{ github.ref_name }}" ./cmd/hrp/main.go

      # Build the Go binary for Linux amd64
      - name: Build for Linux amd64
        run: GOOS=linux GOARCH=amd64 go build -o http-request-printer-linux-amd64 -ldflags "-X main.Version=${{ github.ref_name }}" ./cmd/hrp/main.go

      # Build the Go binary for Linux arm64
      - name: Build for Linux arm64
        run: GOOS=linux GOARCH=arm64 go build -o http-request-printer-linux-arm64 -ldflags "-X main.Version=${{ github.ref_name }}" ./cmd/hrp/main.go

      # Build the Go binary for macOS amd64
      - name: Build for macOS amd64
        run: GOOS=darwin GOARCH=amd64 go build -o http-request-printer-darwin-amd64 -ldflags "-X main.Version=${{ github.ref_name }}" ./cmd/hrp/main.go

      # Build the Go binary for macOS arm64
      - name: Build for macOS arm64
        run: GOOS=darwin GOARCH=arm64 go build -o http-request-printer-darwin-arm64 -ldflags "-X main.Version=${{ github.ref_name }}" ./cmd/hrp/main.go

      # Upload the Windows amd64 binary to the GitHub release
      - name: Upload Windows amd64 Binary to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./http-request-printer-windows-amd64.exe
          asset_name: http-request-printer-windows-amd64-${{ github.ref_name }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the Windows arm64 binary to the GitHub release
      - name: Upload Windows arm64 Binary to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./http-request-printer-windows-arm64.exe
          asset_name: http-request-printer-windows-arm64-${{ github.ref_name }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the Linux amd64 binary to the GitHub release
      - name: Upload Linux amd64 Binary to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./http-request-printer-linux-amd64
          asset_name: http-request-printer-linux-amd64-${{ github.ref_name }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the Linux arm64 binary to the GitHub release
      - name: Upload Linux arm64 Binary to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./http-request-printer-linux-arm64
          asset_name: http-request-printer-linux-arm64-${{ github.ref_name }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the macOS amd64 binary to the GitHub release
      - name: Upload macOS amd64 Binary to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./http-request-printer-darwin-amd64
          asset_name: http-request-printer-darwin-amd64-${{ github.ref_name }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the macOS arm64 binary to the GitHub release
      - name: Upload macOS arm64 Binary to GitHub Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./http-request-printer-darwin-arm64
          asset_name: http-request-printer-darwin-arm64-${{ github.ref_name }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the binary as an artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: http-request-printer-${{ github.ref_name }}
          path: http-request-printer
